import{w as i,b as s,j as r}from"./iframe-7s0T-F6L.js";import{D as l,C as n}from"./constants-DdkjnEgz.js";import{g as c}from"./mock-BznupqUM.js";import{A as u}from"./Avatar-1hD9vHBL.js";import{G as d}from"./Group-CH_sa7ue.js";import{a as C,C as x}from"./Cell-uOEslU3v.js";import"./preload-helper-Dp1pzeXC.js";import"./ImageBase-7R9OqT4P.js";import"./Clickable-LGVh7luH.js";import"./useFocusVisible-BTUcwPxj.js";import"./useFocusVisibleClassName-CMVp5o9Y.js";import"./mergeCalls-Bc-HqyI0.js";import"./callMultiple-ChqatQlo.js";import"./type_checkers-CVMjkZjG.js";import"./ImageBaseBadge-C13UJOhu.js";import"./useColorScheme-BL2QEz1W.js";import"./InputUtils-CP-PNx6u.js";import"./useFocusWithin-DluxB-SI.js";import"./useIsClient-SmbH6kX8.js";import"./useConfigDirection--PDr40UE.js";import"./online_mobile_12-BtP8zEC7.js";import"./SvgIconRootV2-Wzzl8e4S.js";import"./_object_spread_props-DRD4qu7p.js";import"./helpers-QklJbEbU.js";import"./react_utils-CSZjvU4X.js";import"./Footnote-BCofusdy.js";import"./Removable-D4HLOQNr.js";import"./children-DpgARscT.js";import"./IconButton-CH48s9Wj.js";import"./Tappable-BPO49mNS.js";import"./VisuallyHidden-CNF1CStS.js";import"./useGlobalEventListener-D2m4XbLr.js";import"./useEventListener-6ORcdIAV.js";import"./cancel_24-CXDD7VnX.js";import"./SimpleCell-B2IgO3S2.js";import"./Headline-CfLwurX4.js";import"./Subhead-D1_aWRaG.js";import"./chevron_compact_right_24-JevFX-l5.js";import"./chevron_16-1M6O6SWX.js";import"./AdaptiveIconRenderer-CngEuoSF.js";import"./reorder_ios_24-m7_uc1ot.js";import"./check_box_on_24-Ch3Mzeh3.js";import"./check_circle_on_24-TttDJ7xG.js";import"./constants-CtEIZ0Vq.js";const ar={title:"Buttons/Cell/Checkbox",component:C,parameters:{...n,...l},decorators:[i,s]},o={args:{defaultChecked:!0},decorators:[(p,a)=>r.jsx(d,{children:r.jsx(x,{Component:"label",before:r.jsx(u,{src:c("user_xyz")}),after:r.jsx(p,{...a.args}),children:"Игорь Федоров"})})]};var t,m,e;o.parameters={...o.parameters,docs:{...(t=o.parameters)==null?void 0:t.docs,source:{originalSource:`{
  args: {
    defaultChecked: true
  },
  decorators: [(Component, context) => <Group>
        <Cell Component="label" before={<Avatar src={getAvatarUrl('user_xyz')} />} after={<Component {...context.args} />}>
          Игорь Федоров
        </Cell>
      </Group>]
}`,...(e=(m=o.parameters)==null?void 0:m.docs)==null?void 0:e.source}}};const ir=["Playground"];export{o as Playground,ir as __namedExportsOrder,ar as default};
