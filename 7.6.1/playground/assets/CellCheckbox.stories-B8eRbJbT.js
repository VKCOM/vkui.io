import{w as i,b as s,j as r}from"./iframe-CdtcRMP-.js";import{D as l,C as n}from"./constants-DdkjnEgz.js";import{g as c}from"./mock-BznupqUM.js";import{A as u}from"./Avatar-BXKCkIBT.js";import{G as d}from"./Group-BPDDF8j8.js";import{a as C,C as x}from"./Cell-DAf-bAQq.js";import"./preload-helper-Dp1pzeXC.js";import"./ImageBase-BuKB8O3U.js";import"./Clickable-nnjkiOyK.js";import"./useFocusVisibleClassName-r8X4bE31.js";import"./mergeCalls-Bc-HqyI0.js";import"./callMultiple-ChqatQlo.js";import"./type_checkers-CVMjkZjG.js";import"./ImageBaseBadge-ClYqcA4W.js";import"./useColorScheme-Bqwp8l3s.js";import"./InputUtils-4kqGTgL9.js";import"./useFocusWithin-CnBAXQ2U.js";import"./useIsClient-B7bjAOfN.js";import"./useConfigDirection-I0bRjt3K.js";import"./online_mobile_12--qRJFinP.js";import"./SvgIconRootV2-CcgDj6WP.js";import"./_object_spread_props-DRD4qu7p.js";import"./helpers-QklJbEbU.js";import"./react_utils-CSZjvU4X.js";import"./Footnote-UnTPOYYT.js";import"./Removable-nQuC3wCX.js";import"./children-BpYEnGqU.js";import"./IconButton-rnOj30v2.js";import"./Tappable-znRvcKvt.js";import"./VisuallyHidden-CtlI0uOO.js";import"./useGlobalEventListener-enXvR1yE.js";import"./useEventListener-CidaaUBr.js";import"./cancel_24-DMLedojc.js";import"./SimpleCell-DSOj1jKk.js";import"./Headline-BNe6tvfn.js";import"./Subhead-DKX6pZDk.js";import"./chevron_compact_right_24-lHFnU4Rs.js";import"./chevron_16-cxMQw6Cg.js";import"./AdaptiveIconRenderer-By43qae_.js";import"./reorder_ios_24-srCtDSQP.js";import"./check_box_on_24-BiPwgksd.js";import"./check_circle_on_24-CS4lhGzB.js";import"./constants-CtEIZ0Vq.js";const pr={title:"Buttons/Cell/Checkbox",component:C,parameters:{...n,...l},decorators:[i,s]},o={args:{defaultChecked:!0},decorators:[(p,a)=>r.jsx(d,{children:r.jsx(x,{Component:"label",before:r.jsx(u,{src:c("user_xyz")}),after:r.jsx(p,{...a.args}),children:"Игорь Федоров"})})]};var t,e,m;o.parameters={...o.parameters,docs:{...(t=o.parameters)==null?void 0:t.docs,source:{originalSource:`{
  args: {
    defaultChecked: true
  },
  decorators: [(Component, context) => <Group>
        <Cell Component="label" before={<Avatar src={getAvatarUrl('user_xyz')} />} after={<Component {...context.args} />}>
          Игорь Федоров
        </Cell>
      </Group>]
}`,...(m=(e=o.parameters)==null?void 0:e.docs)==null?void 0:m.source}}};const ar=["Playground"];export{o as Playground,ar as __namedExportsOrder,pr as default};
