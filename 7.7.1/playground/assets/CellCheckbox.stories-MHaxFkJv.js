import{w as i,b as s,j as r}from"./iframe-dTlwAXGa.js";import{D as l,C as n}from"./constants-DdkjnEgz.js";import{g as c}from"./mock-BznupqUM.js";import{A as u}from"./Avatar-D1LFFtlD.js";import{G as d}from"./Group-CrremWw-.js";import{a as C,C as x}from"./Cell-GJHfCsHL.js";import"./preload-helper-Dp1pzeXC.js";import"./ImageBase-AJ3e9bE9.js";import"./Clickable-Dl5F7aV_.js";import"./useFocusVisible-8SFeJi_q.js";import"./useFocusVisibleClassName-YQKPigFR.js";import"./mergeCalls-Bc-HqyI0.js";import"./callMultiple-ChqatQlo.js";import"./type_checkers-CVMjkZjG.js";import"./ImageBaseBadge-Gqd0lug3.js";import"./useColorScheme-BL3jX5yR.js";import"./InputUtils-CtGJ0DI4.js";import"./useFocusWithin-kuId0kJs.js";import"./useIsClient-BVOBl7-A.js";import"./useConfigDirection-BIk700TM.js";import"./online_mobile_12-CBAdE4s5.js";import"./SvgIconRootV2-ob9v3OIY.js";import"./_object_spread_props-DRD4qu7p.js";import"./helpers-QklJbEbU.js";import"./react_utils-CSZjvU4X.js";import"./Footnote-DJb5ZlwN.js";import"./Removable-BvBDqmqD.js";import"./children-D0xCpVZl.js";import"./IconButton-MYG7es_8.js";import"./Tappable-qMfTC7Pz.js";import"./VisuallyHidden-JumwXwcS.js";import"./useGlobalEventListener-DR7m9Uut.js";import"./useEventListener-CM8ERZU-.js";import"./cancel_24-sfpNhjae.js";import"./SimpleCell-pVFSTIJK.js";import"./Headline-nnEuybdp.js";import"./Subhead-BlOKXAAl.js";import"./chevron_compact_right_24-C3ktCmz2.js";import"./chevron_16-DHR9v_Z1.js";import"./AdaptiveIconRenderer-ESMEwK9d.js";import"./reorder_ios_24-CYpPEkSN.js";import"./check_box_on_24-Be72trti.js";import"./check_circle_on_24-QthlvxfI.js";import"./constants-CtEIZ0Vq.js";const ar={title:"Buttons/Cell/Checkbox",component:C,parameters:{...n,...l},decorators:[i,s]},o={args:{defaultChecked:!0},decorators:[(p,a)=>r.jsx(d,{children:r.jsx(x,{Component:"label",before:r.jsx(u,{src:c("user_xyz")}),after:r.jsx(p,{...a.args}),children:"Игорь Федоров"})})]};var t,m,e;o.parameters={...o.parameters,docs:{...(t=o.parameters)==null?void 0:t.docs,source:{originalSource:`{
  args: {
    defaultChecked: true
  },
  decorators: [(Component, context) => <Group>
        <Cell Component="label" before={<Avatar src={getAvatarUrl('user_xyz')} />} after={<Component {...context.args} />}>
          Игорь Федоров
        </Cell>
      </Group>]
}`,...(e=(m=o.parameters)==null?void 0:m.docs)==null?void 0:e.source}}};const ir=["Playground"];export{o as Playground,ir as __namedExportsOrder,ar as default};
