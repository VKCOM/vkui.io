import{w as i,b as s,j as r}from"./iframe-DveaDHpJ.js";import{D as l,C as n}from"./constants-DdkjnEgz.js";import{g as c}from"./mock-BznupqUM.js";import{A as u}from"./Avatar-BZ_UOjJ3.js";import{G as d}from"./Group-jSVFVrUQ.js";import{a as C,C as x}from"./Cell-DDnnBQ1r.js";import"./preload-helper-Dp1pzeXC.js";import"./ImageBase-CSPjt5UO.js";import"./Clickable-Qd8MhpMK.js";import"./useFocusVisibleClassName-Dv2zV7aT.js";import"./mergeCalls-Bc-HqyI0.js";import"./callMultiple-ChqatQlo.js";import"./type_checkers-CVMjkZjG.js";import"./ImageBaseBadge-jOcLBbtU.js";import"./useColorScheme-Ca6Q1evu.js";import"./InputUtils-DB2utYDB.js";import"./useFocusWithin-C-V6I_uV.js";import"./useIsClient-Bmcaxh8V.js";import"./useConfigDirection-C-LxfHUm.js";import"./online_mobile_12-DR7dOS3R.js";import"./SvgIconRootV2-DLNfXJsw.js";import"./_object_spread_props-DRD4qu7p.js";import"./helpers-QklJbEbU.js";import"./react_utils-CSZjvU4X.js";import"./Footnote-DMEVDgek.js";import"./Removable-dXf4SeU2.js";import"./children-DIqfUSJp.js";import"./IconButton-B6-RVMvP.js";import"./Tappable-B6M0Cj2d.js";import"./VisuallyHidden-C4fiFLiw.js";import"./useGlobalEventListener-DxW3-2us.js";import"./useEventListener-BZXVGBW4.js";import"./cancel_24-v6kzA3DC.js";import"./SimpleCell-C5FLI9j_.js";import"./Headline-D2z7orvN.js";import"./Subhead-CMDv2ZTP.js";import"./chevron_compact_right_24-_2yPNVIn.js";import"./chevron_16-8_wEssbM.js";import"./AdaptiveIconRenderer-D02Z7Vvb.js";import"./reorder_ios_24-B1myTCle.js";import"./check_box_on_24-BsHKmyz3.js";import"./check_circle_on_24-FNfqmYlu.js";import"./constants-CtEIZ0Vq.js";const pr={title:"Buttons/Cell/Checkbox",component:C,parameters:{...n,...l},decorators:[i,s]},o={args:{defaultChecked:!0},decorators:[(p,a)=>r.jsx(d,{children:r.jsx(x,{Component:"label",before:r.jsx(u,{src:c("user_xyz")}),after:r.jsx(p,{...a.args}),children:"Игорь Федоров"})})]};var t,e,m;o.parameters={...o.parameters,docs:{...(t=o.parameters)==null?void 0:t.docs,source:{originalSource:`{
  args: {
    defaultChecked: true
  },
  decorators: [(Component, context) => <Group>
        <Cell Component="label" before={<Avatar src={getAvatarUrl('user_xyz')} />} after={<Component {...context.args} />}>
          Игорь Федоров
        </Cell>
      </Group>]
}`,...(m=(e=o.parameters)==null?void 0:e.docs)==null?void 0:m.source}}};const ar=["Playground"];export{o as Playground,ar as __namedExportsOrder,pr as default};
