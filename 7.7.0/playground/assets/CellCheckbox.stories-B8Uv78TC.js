import{w as i,b as s,j as r}from"./iframe-B4SbMwac.js";import{D as l,C as n}from"./constants-DdkjnEgz.js";import{g as c}from"./mock-BznupqUM.js";import{A as u}from"./Avatar-CoSV9blQ.js";import{G as d}from"./Group-BdqZOTIB.js";import{a as C,C as x}from"./Cell-pnWZseGv.js";import"./preload-helper-Dp1pzeXC.js";import"./ImageBase-JYJo2bcq.js";import"./Clickable-LHka_ZWc.js";import"./useFocusVisible-CA0gmOpw.js";import"./useFocusVisibleClassName-CYMT8ouX.js";import"./mergeCalls-Bc-HqyI0.js";import"./callMultiple-ChqatQlo.js";import"./type_checkers-CVMjkZjG.js";import"./ImageBaseBadge-Bgt2c9nz.js";import"./useColorScheme-D4AzIlWD.js";import"./InputUtils-C948cbKc.js";import"./useFocusWithin-to_rIq53.js";import"./useIsClient-BLqc0TVE.js";import"./useConfigDirection-D94ZyAhW.js";import"./online_mobile_12-CG4amDzl.js";import"./SvgIconRootV2-CSlzNDT1.js";import"./_object_spread_props-DRD4qu7p.js";import"./helpers-QklJbEbU.js";import"./react_utils-CSZjvU4X.js";import"./Footnote-PzIaqeP1.js";import"./Removable-BMbXMjJQ.js";import"./children-hJQIY4yI.js";import"./IconButton-BrekU4vj.js";import"./Tappable-DlzKIRC8.js";import"./VisuallyHidden-B_fMC41X.js";import"./useGlobalEventListener-CEYAu_n8.js";import"./useEventListener-D7G2gz9_.js";import"./cancel_24-BiaNkhfM.js";import"./SimpleCell-B3xHvs3D.js";import"./Headline-DyfFpR9w.js";import"./Subhead-BszjoIm7.js";import"./chevron_compact_right_24-Bbxtve_V.js";import"./chevron_16-DNg3QADm.js";import"./AdaptiveIconRenderer-CR9XwE1z.js";import"./reorder_ios_24-BRQYG2yD.js";import"./check_box_on_24-DYECzjEP.js";import"./check_circle_on_24-C-1w6mRA.js";import"./constants-CtEIZ0Vq.js";const ar={title:"Buttons/Cell/Checkbox",component:C,parameters:{...n,...l},decorators:[i,s]},o={args:{defaultChecked:!0},decorators:[(p,a)=>r.jsx(d,{children:r.jsx(x,{Component:"label",before:r.jsx(u,{src:c("user_xyz")}),after:r.jsx(p,{...a.args}),children:"Игорь Федоров"})})]};var t,m,e;o.parameters={...o.parameters,docs:{...(t=o.parameters)==null?void 0:t.docs,source:{originalSource:`{
  args: {
    defaultChecked: true
  },
  decorators: [(Component, context) => <Group>
        <Cell Component="label" before={<Avatar src={getAvatarUrl('user_xyz')} />} after={<Component {...context.args} />}>
          Игорь Федоров
        </Cell>
      </Group>]
}`,...(e=(m=o.parameters)==null?void 0:m.docs)==null?void 0:e.source}}};const ir=["Playground"];export{o as Playground,ir as __namedExportsOrder,ar as default};
