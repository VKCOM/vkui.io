import{w as i,b as s,j as r}from"./iframe-VQuwIBim.js";import{D as l,C as n}from"./constants-DdkjnEgz.js";import{g as c}from"./mock-BznupqUM.js";import{A as u}from"./Avatar-C7wjORe_.js";import{G as d}from"./Group-CM6wWYyu.js";import{a as C,C as x}from"./Cell-SlhzKCcn.js";import"./ImageBase-BsyA3SxR.js";import"./Clickable-GKvDpg7c.js";import"./useFocusVisibleClassName--V0F3pwv.js";import"./mergeCalls-Bc-HqyI0.js";import"./callMultiple-ChqatQlo.js";import"./type_checkers-CVMjkZjG.js";import"./ImageBaseBadge-lUb35v5x.js";import"./useColorScheme-3PoJfbUB.js";import"./InputUtils-esLGIMz7.js";import"./useFocusWithin-C9W7nehx.js";import"./useIsClient--20LXL4m.js";import"./useConfigDirection-BhKWnP92.js";import"./online_mobile_12-22TycoA2.js";import"./_object_spread_props-DRD4qu7p.js";import"./SvgIconRoot-CQoq0Nal.js";import"./helpers-QklJbEbU.js";import"./react_utils-CSZjvU4X.js";import"./Footnote-CFr_RCRn.js";import"./Removable-B69Ae71z.js";import"./children-DbSAwzjm.js";import"./IconButton-CsO6Fs2D.js";import"./Tappable-DJKRXU4j.js";import"./VisuallyHidden-Bn9barOE.js";import"./useGlobalEventListener-Dg2G1Bu3.js";import"./useEventListener-buG494Se.js";import"./cancel_24-76PwI_pT.js";import"./SimpleCell-Bx23Z_Ak.js";import"./Headline-DlMci9v_.js";import"./Subhead-BovRsuwk.js";import"./chevron_compact_right_24-NA_iCiSP.js";import"./chevron_16-CrLMruU6.js";import"./AdaptiveIconRenderer-BncaVmUu.js";import"./reorder_ios_24-CgAqhjsg.js";import"./check_box_on_24-Dr4fiKV4.js";import"./check_circle_on_24-BhaJOotW.js";import"./constants-CtEIZ0Vq.js";const mr={title:"Buttons/Cell/Checkbox",component:C,parameters:{...n,...l},decorators:[i,s]},o={args:{defaultChecked:!0},decorators:[(a,p)=>r.jsx(d,{children:r.jsx(x,{Component:"label",before:r.jsx(u,{src:c("user_xyz")}),after:r.jsx(a,{...p.args}),children:"Игорь Федоров"})})]};var t,e,m;o.parameters={...o.parameters,docs:{...(t=o.parameters)==null?void 0:t.docs,source:{originalSource:`{
  args: {
    defaultChecked: true
  },
  decorators: [(Component, context) => <Group>
        <Cell Component="label" before={<Avatar src={getAvatarUrl('user_xyz')} />} after={<Component {...context.args} />}>
          Игорь Федоров
        </Cell>
      </Group>]
}`,...(m=(e=o.parameters)==null?void 0:e.docs)==null?void 0:m.source}}};const ar=["Playground"];export{o as Playground,ar as __namedExportsOrder,mr as default};
